[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ndx-fiber-photometry"
version = "0.2.1"
authors = [
    { name="Alessandra Trapani", email="alessandra.trapani@catalystneuro.com" },
    { name="Luiz Tauffer", email="luiz.tauffer@catalystneuro.com" },
    { name="Paul Adkisson", email="paul.adkisson@catalystneuro.com" },
    { name="Szonja Weigl", email="szonja.weigl@catalystneuro.com" },
]
description = "This is an NWB extension for storing fiber photometry recordings and associated metadata."
readme = "README.md"
# requires-python = ">=3.8"
license = {text = "BSD-3"}
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
]
keywords = [
    'NeurodataWithoutBorders',
    'NWB',
    'nwb-extension',
    'ndx-extension',
]
dependencies = [
    "pynwb>=3.1.0",
    "hdmf>=4.1.0",
    "ndx_ophys_devices>=0.3.1",
]

[project.urls]
"Homepage" = "https://github.com/organization/ndx-fiber-photometry"
# "Documentation" = "https://package.readthedocs.io/"
"Bug Tracker" = "https://github.com/organization/ndx-fiber-photometry/issues"
# "Discussions" = "https://github.com/organization/package/discussions"
# "Changelog" = "https://github.com/organization/package/blob/main/CHANGELOG.md"

# Include only the source code under `src/pynwb/ndx_fiber_photometry` and the spec files under `spec`
# in the wheel.
[tool.hatch.build.targets.wheel]
packages = [
    "src/pynwb/ndx_fiber_photometry",
    "spec"
]

# Rewrite the path to the `spec` directory to `{{ cookiecutter.py_pkg_name }}/spec`.
# `{{ cookiecutter.py_pkg_name }}/__init__.py` will look there first for the spec files.
# The resulting directory structure within the wheel will be:
# {{ cookiecutter.py_pkg_name }}/
# ├── __init__.py
# ├── spec
# └── widgets
[tool.hatch.build.targets.wheel.sources]
"spec" = "ndx_fiber_photometry/spec"

# The source distribution includes everything in the package except for the `src/matnwb` directory and
# git and github-related files.
[tool.hatch.build.targets.sdist]
exclude = [
    ".git*",
    "src/matnwb",
]

[tool.pytest.ini_options]
# uncomment below to run pytest always with code coverage reporting. NOTE: breakpoints may not work
# addopts = "--cov --cov-report html"

[tool.codespell]
skip = "htmlcov,.git,.mypy_cache,.pytest_cache,.coverage,*.pdf,*.svg,venvs,.tox,hdmf-common-schema,./docs/_build/*,*.ipynb"

[tool.coverage.run]
branch = true
source = ["ndx_fiber_photometry"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]

[tool.black]
line-length = 120
preview = true
exclude = ".git|.mypy_cache|.tox|.venv|venv|.ipynb_checkpoints|_build/|dist/|__pypackages__|.ipynb|docs/"

[tool.ruff]
lint.select = ["E", "F", "T100", "T201", "T203"]
exclude = [
  ".git",
  ".tox",
  "__pycache__",
  "build/",
  "dist/",
  "docs/source/conf.py",
]
line-length = 120

[tool.ruff.lint.per-file-ignores]
"src/pynwb/ndx_fiber_photometry/__init__.py" = ["E402", "F401"]
"src/spec/create_extension_spec.py" = ["T201"]

[tool.ruff.lint.mccabe]
max-complexity = 17
